services:
  api:
    build: .
    container_name: api
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      APP_DB_HOST: postgres
      APP_DB_USER: root
      APP_DB_PASSWORD: pantera!!!
      APP_DB_NAME: hello
    volumes:
      - ./app:/app
    command:
      ["fastapi", "dev", "main.py", "--port", "8080", "--host", "0.0.0.0"]
    # develop:
    #   watch:
    #     - action: rebuild
    #       path: Pipfile
    #     - action: rebuild
    #       path: Dockerfile
    #     - action: rebuild
    #       path: docker-compose.yaml
  test:
    build: .
    container_name: test
    depends_on:
      - postgres
      - api
    environment:
      APP_DB_HOST: postgres
      APP_DB_USER: root
      APP_DB_PASSWORD: pantera!!!
      APP_DB_NAME: hello
    volumes:
      - ./test:/app/test
    command:
      - /bin/bash
      - -c
      - |
        sleep 5
        pytest -vv ./test
        sleep 1000000
    # develop:
    #   watch:
    #     - action: sync+restart
    #       path: ./app
    #       target: /app
  postgres:
    image: postgres:13.3
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: pantera!!!
      POSTGRES_DB: hello
    ports:
      - "5432:5432"
    volumes:
      - ./database/mock.sql:/docker-entrypoint-initdb.d/init.sql
